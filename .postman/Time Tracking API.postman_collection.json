{
	"info": {
		"_postman_id": "3ebf7d2f-67c9-446a-af89-6e812151c31b",
		"name": "Time Tracking API",
		"description": "Functional API tests for the [Time Tracking API](https://github.com/BryanMorgan/time-tracking-api)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "602518a2-64fb-4de7-b291-af6301bbb158",
						"exec": [
							"pm.test(\"ping return 'ok'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ok\");",
							"});",
							"",
							"pm.test(\"ping returns 200 status code\", function () {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/_ping",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"_ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ce8e75f-4768-4242-b61a-da1cd80c0de5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.email).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							"",
							"const cookies = pm.response.headers.all().filter(headerObj => headerObj.key === 'Set-Cookie').map(headerObj => headerObj.value);",
							"pm.collectionVariables.set(\"session.cookies\", cookies)",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "aac582f2-6cf0-46ef-96ef-4d4e3d98ba15",
						"exec": [
							"let email = pm.variables.replaceIn('{{$randomEmail}}')",
							"let password = pm.variables.replaceIn('{{$randomPassword}}')",
							"pm.collectionVariables.set(\"password\", password)",
							"pm.collectionVariables.set(\"email\", email);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"company\": \"{{$randomCompanyName}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"timezone\": \"America/Los_Angeles\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error: Create Account (no email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abefaf66-4d72-4649-a5f5-8ba728c6a1d9",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.eql('error')",
							"    pm.expect(data.error).to.eql('invalid input')",
							"    pm.expect(data.code).to.eql('InvalidEmail')",
							"    pm.expect(data.detail.field).to.eql(\"email\")",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "89d24d15-7504-46b2-b00c-329276605187",
						"exec": [
							"let password = pm.collectionVariables.get(\"password\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"password\": \"{{password}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b45c7082-4cad-4ce3-ac3b-6fa696a2e8ec",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.company).to.exist",
							"    pm.expect(data.weekStart).to.exist",
							"    pm.expect(data.timezone).to.exist",
							"    pm.expect(data.created).to.exist",
							"    pm.expect(data.updated).to.exist",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "81f007dd-f66a-45e5-83aa-d8e841d54aaa",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Account Add user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8266cfe5-7215-4fd9-bdd9-bfbb5205771c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eaf6d8ab-5e83-401d-ac2f-d547f7a3481d",
						"exec": [
							"let additionalUserEmail = pm.variables.replaceIn('{{$randomEmail}}')",
							"pm.collectionVariables.set(\"additionalUserEmail\", additionalUserEmail);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{additionalUserEmail}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Account Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3e790dd5-c67d-4521-af9e-cd5c1426af1e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data[0].firstName).to.exist",
							"    pm.expect(data[0].lastName).to.exist",
							"    pm.expect(data[0].email).to.exist",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7d89dc66-ed3d-46c1-a2b0-9f4ed79aa212",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/account/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Account Remove user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d027db95-4781-4292-b621-088a26d08b07",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data).to.eql({})",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "be8b250a-f3e8-4054-8d75-901181c4a360",
						"exec": [
							"let password = pm.collectionVariables.get(\"additionalUserEmail\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{additionalUserEmail}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef979a52-a294-4e4e-97c3-f7feff8008df",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.email).to.exist",
							"    pm.expect(data.company).to.exist",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "660d127c-f98a-4aa7-b4cb-c9990155d12a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6833a51a-15ea-4141-9f13-9518d12460e6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.email).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "84adcba5-6675-4737-91d6-37fe3877628b",
						"exec": [
							"let email = pm.variables.replaceIn('{{$randomEmail}}')",
							"pm.collectionVariables.set(\"email\", email);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{email}}\",\n    \"timezone\": \"America/New_York\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "28daca46-177e-4e50-9d59-05ac2e8f8a19",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.weekStart).to.exist",
							"    pm.expect(data.timezone).to.exist",
							"    pm.expect(data.created).to.exist",
							"    pm.expect(data.updated).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "23492f73-e29f-4a9c-93ea-a4bc86fb7e95",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"company\": \"{{$randomCompanyName}}\",\n    \"timezone\": \"America/Los_Angeles\",\n    \"weekStart\": 2\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error: 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a46052d8-94d7-43bd-8405-95942aaed999",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.eql('error')",
							"    pm.expect(data.error).to.eql('Not Found')",
							"    pm.expect(data.code).to.eql('NotFound')",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c6908d49-4bb9-48b9-b31d-62ea082946e0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/invalid-url",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"invalid-url"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb1006d1-1c7c-422c-b669-b828e6a446ed",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							"",
							"const cookies = pm.response.headers.all().filter(headerObj => headerObj.key === 'Set-Cookie').map(headerObj => headerObj.value);",
							"pm.collectionVariables.set(\"session.cookies\", cookies)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "441cba87-37e5-49d3-9605-5a1f5d41f1c5",
						"exec": [
							"let password = pm.collectionVariables.get(\"password\")",
							"let email = pm.collectionVariables.get(\"email\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error: Login (invalid password)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cbf9f98b-0b03-491c-93a4-22e4ba6886e6",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.eql('error')",
							"    pm.expect(data.code).to.eql('IncorrectPassword')",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2a1403d3-df0c-490b-b151-c3b26b180b4d",
						"exec": [
							"let email = pm.collectionVariables.get(\"email\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"THIS_PASSWORD_IS_INCORRECT!\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "062b9c46-37c9-493b-a6f9-3551b0be0164",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "43c74fd4-c462-4f87-9399-470830a1055e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/auth/token",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error: Token (invalid token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51b4c66e-657c-44c5-b101-5b3ba7389256",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.eql('error')",
							"    pm.expect(data.code).to.eql('InvalidToken')",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7325fd8d-f6bc-451d-ada4-4912153e1782",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer: THIS-IS-INVALID"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/auth/token",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Profile Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9a6af73-6868-471c-85d7-41744f1a19a1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});",
							"",
							"// Ensure we can run this multiple times by resetting the password",
							"pm.collectionVariables.set(\"password\", pm.collectionVariables.get(\"newPassword\"))",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f1ff571b-87cb-4db1-9856-a18932a13799",
						"exec": [
							"pm.collectionVariables.set(\"newPassword\", pm.variables.replaceIn('{{$randomPassword}}'))",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"currentPassword\": \"{{password}}\",\n    \"password\": \"{{newPassword}}\",\n    \"confirmPassword\": \"{{newPassword}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/profile/password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"profile",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f2d5e3b-a303-43d9-bf52-87cdd0385780",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.id).to.exist",
							"    pm.expect(data.name).to.exist",
							"",
							"    pm.collectionVariables.set(\"clientId\", data.id)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2e0cc13e-54ea-41a8-97a7-30c1a7124038",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomCompanyName}}\",\n    \"address\": \"{{$randomStreetAddress}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/client",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a3ccc7d-067e-4da0-93f6-49ce3f44f82d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.id).to.exist",
							"    pm.expect(data.name).to.exist",
							"",
							"    pm.collectionVariables.set(\"clientId\", data.id)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1c6a44b4-9a86-4316-882e-b4698344b093",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/{{clientId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"{{clientId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d39c9c1e-e9d0-4325-936d-ff4aa011a120",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data[0].id).to.exist",
							"    pm.expect(data[0].name).to.exist",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "33ea0e8c-04d1-44ad-966b-8d4773582f18",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/all",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a53eedae-4433-432b-b894-d9e7d7769c51",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e40eca7d-00d3-4d23-a6d1-6078cd158ad9",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.id).to.exist",
							"    pm.expect(data.name).to.exist",
							"",
							"    pm.collectionVariables.set(\"taskId\", data.id)",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"task-{{$timestamp}}\",\n\t\"rate\": 185.50,\n\t\"billable\": true,\n\t\"common\": true\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/task",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "25b04b1d-c898-4841-8e56-da3626fac5c8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6137c021-27aa-4c4b-a5ec-005df9cd0176",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.id).to.exist",
							"    pm.expect(data.name).to.exist",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/task/{{taskId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6d4533a0-81d1-46d6-9dd2-ac96a3573bff",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2ec3ea65-7450-4204-bd26-2f5692194c89",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": {{taskId}},\n\t\"name\": \"task-updated-{{$timestamp}}\",\n\t\"rate\": 200,\n\t\"billable\": false,\n\t\"common\": false\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/task",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95be923f-ad5d-4950-86f9-93cdb0de2237",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"let clientId = parseInt(pm.variables.replaceIn('{{clientId}}'))",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.id).to.exist",
							"    pm.expect(data.name).to.exist",
							"    pm.expect(data.active).to.eq(true)",
							"    pm.expect(data.clientId).to.eq(clientId)",
							"",
							"    pm.collectionVariables.set(\"projectId\", data.id)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "254c1cb5-4dbf-4ed8-b20a-6993f8c31a76",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomProductName}}\",\n    \"clientId\": {{clientId}}\n}\n",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/client/project",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"project"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dd170445-e145-4f01-b16f-a6c1a5089671",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1d567995-9db6-4c35-b85f-9395e88e115b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"let clientId = parseInt(pm.variables.replaceIn('{{clientId}}'))",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.id).to.exist",
							"    pm.expect(data.name).to.exist",
							"    pm.expect(data.active).to.eq(true)",
							"    pm.expect(data.clientId).to.eq(clientId)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/project/{{projectId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"project",
						"{{projectId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b7bb6e22-e61c-4a36-8b6c-f15b4eb43c11",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "345a6529-a6a8-4ceb-a085-12e03f0e6e0d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": {{projectId}},\n\t\"name\": \"updated-project-{{$timestamp}}\",\n\t\"code\": \"{{$guid}}\",\n\t\"active\": true,\n\t\"clientId\": {{clientId}},\n\t\"tasks\": [\n\t\t{\n\t\t\t\"taskId\": {{taskId}}\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/client/project",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"project"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Projects",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8657a35c-4030-49f8-b1cb-db7d750b7ea9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a02bf198-4b4e-4f50-a0b1-8ca92783d5a1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"let clientId = parseInt(pm.variables.replaceIn('{{clientId}}'))",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data[0].id).to.exist",
							"    pm.expect(data[0].name).to.exist",
							"    pm.expect(data[0].active).to.eq(true)",
							"    pm.expect(data[0].clientId).to.eq(clientId)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/project/all",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"project",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save or Update Time Entries",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7ce0a0b2-e186-451a-bdc3-fde38f2a4f13",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0a5ec32a-cf5b-4ef1-90b1-1bf3a8b0c2bf",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"entries\":[\n\t\t{\n\t\t\t\"day\": \"2017-10-12\",\n\t\t\t\"hours\": 8,\n\t\t\t\"taskId\": {{taskId}},\n\t\t\t\"projectId\": {{projectId}}\n\t\t},\n\t\t{\n\t\t\t\"day\": \"2017-10-11\",\n\t\t\t\"hours\": 4,\n\t\t\t\"taskId\": {{taskId}},\n\t\t\t\"projectId\": {{projectId}}\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/time",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"time"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Time for Week: 2017-10-11",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "64cf650e-e5eb-4dc7-860a-bf2629bd4223",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "be449e68-25d3-4bcf-b318-864b8f459491",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.entries).to.exist",
							"    pm.expect(data.entries.length).to.be.greaterThan(1);",
							"    pm.expect(data.start).to.eq('2017-10-10')",
							"    pm.expect(data.end).to.eq('2017-10-16')",
							"    pm.expect(data.entries[0].day).to.eq('2017-10-11')",
							"    pm.expect(data.entries[0].hours).to.eq(4)",
							"    pm.expect(data.entries[0].clientName).to.exist",
							"    pm.expect(data.entries[0].projectName).to.exist",
							"    pm.expect(data.entries[0].taskName).to.exist",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/time/week/2017-10-11",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"time",
						"week",
						"2017-10-11"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Time for Empty Week: 2017-01-01",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "28dfe74d-3460-4c3f-abd1-4164055bfdcd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2f491281-7a10-43a1-9545-fa50ddd88652",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.entries).to.exist",
							"    pm.expect(data.entries.length).to.be.eq(0);",
							"    pm.expect(data.start).to.eq('2016-12-27')",
							"    pm.expect(data.end).to.eq('2017-01-02')",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/time/week/2017-01-01",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"time",
						"week",
						"2017-01-01"
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a522664a-599a-4af6-aee1-502ced11ca6b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "82d5a7d5-9a2d-44b8-9fa0-86160d362798",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": {{taskId}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/task/archive",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task",
						"archive"
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9122fd68-8c80-4100-bfa5-de7bbf387bad",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "941e2cae-e741-48fe-bb41-b3e01e9fd59c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projectId\": {{projectId}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/client/project/archive",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"project",
						"archive"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project from Time for Week: 2017-10-12",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6679793a-a659-4c11-a31f-61f062cc2fcd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9c2a4271-0ee5-42e9-b77f-236b0962e7fd",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"startDate\": \"2017-10-12\",\n\t\"endDate\": \"2017-10-19\",\n\t\"taskId\": {{taskId}},\n\t\"projectId\": {{projectId}},\n\t\"deleteWeek\": true\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/time/project/week",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"time",
						"project",
						"week"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b847aedb-5d5b-43c3-a3d3-7b256d27b21f",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "127437f2-e20a-4fee-b923-276a96526524",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": {{taskId}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/task",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "92de4b63-cf43-405a-ba6e-d65faea1be4f",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cbdc69a8-9564-4884-b0ec-6f101925b884",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projectId\": {{projectId}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/client/project",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"project"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Client",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "25c502fc-822b-4c36-ac2e-9512acef1c7b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d3e943a7-3a19-44f4-9e7f-f39ac99e1aca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": {{clientId}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/client",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client"
					]
				}
			},
			"response": []
		},
		{
			"name": "Forgot Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "32727c4d-0801-4fe8-80fd-a273c333e01a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "502aefe5-0f88-4d5a-b44d-828fea3c6bfb",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/auth/forgot",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"forgot"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f7caa0e-31df-475e-91a2-d509fb3c30a9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "70361e34-ff48-405f-bff5-5572011ca3f5",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/auth/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error: Get User (no token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd32492a-61da-4bb6-89fe-ae347f668724",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.eql('error')",
							"    pm.expect(data.code).to.eql('MissingToken')",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5b70d5b3-fbc5-4ed5-b74a-f65b0d49fd91",
						"exec": [
							"const jar = pm.cookies.jar();",
							"",
							"let domain = pm.variables.replaceIn('{{base_url}}')",
							"",
							"jar.clear(domain, function (error) {",
							"    console.log(\"cleared for \" + domain)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Account to Close",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "536342a3-58cf-437e-ab2f-ae51e85b9bf3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json().data",
							"    pm.expect(data.status).to.not.eql('error')",
							"    pm.expect(data.firstName).to.exist",
							"    pm.expect(data.lastName).to.exist",
							"    pm.expect(data.email).to.exist",
							"    pm.expect(data.company).to.exist",
							"});",
							"",
							"const cookies = pm.response.headers.all().filter(headerObj => headerObj.key === 'Set-Cookie').map(headerObj => headerObj.value);",
							"pm.collectionVariables.set(\"session.cookies\", cookies)",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b4de1d2b-fd34-448f-b158-6de420fe2976",
						"exec": [
							"let email = pm.variables.replaceIn('{{$randomEmail}}')",
							"let password = pm.variables.replaceIn('{{$randomPassword}}')",
							"pm.collectionVariables.set(\"password\", password)",
							"pm.collectionVariables.set(\"email\", email);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"company\": \"{{$randomCompanyName}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"timezone\": \"America/Los_Angeles\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Close Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ff78989-24d8-458c-b58a-e3fa56af6d6f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data).to.eql({})",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7763fef4-ddf2-4e24-bea8-12bb59e11815",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "{{session.cookies}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"reason\": \"{{$randomPhrase}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Error: Get Account (not active)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35abf2e9-51cf-478b-8137-e57431a2bdce",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400)",
							"});",
							"",
							"pm.test(\"Response data is correct\", function () {",
							"    let data = pm.response.json()",
							"    pm.expect(data.status).to.eql('error')",
							"    pm.expect(data.code).to.eql('AccountInactive')",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b3a1f712-0cf9-4723-955c-5847c5d95889",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"type": "text",
						"value": "{{session.cookies}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/account",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"id": "d406d5d6-f5d3-4544-9ef2-c6e21744625e",
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"id": "613f134f-a068-4c50-8b53-1ae614399821",
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"id": "650305ec-2712-4f5a-9afe-07f0f9d99bc1",
			"key": "tt.session",
			"value": "",
			"type": "string"
		},
		{
			"id": "693eed0a-59c4-45dd-86e8-5d2827dd301e",
			"key": "session.cookies",
			"value": "",
			"type": "string"
		},
		{
			"id": "485bfc35-21ee-44bb-ad0d-f98135819e3f",
			"key": "newPassword",
			"value": "",
			"type": "string"
		},
		{
			"id": "3d72e2cd-23ea-46a2-91a0-d7185ce70657",
			"key": "additionalUserEmail",
			"value": "",
			"type": "string"
		},
		{
			"id": "894c038b-0c9d-49d8-a25f-5011dd0d563e",
			"key": "clientId",
			"value": "",
			"type": "string"
		},
		{
			"id": "ddff76f2-c1d8-4cce-85a2-1122079976db",
			"key": "taskId",
			"value": "",
			"type": "string"
		},
		{
			"id": "2f882a7f-8ee7-4c54-8da4-8d56c706ea25",
			"key": "projectId",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}